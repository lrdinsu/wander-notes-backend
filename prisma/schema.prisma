// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                  = "zod-prisma-validates"
  createRelationValuesTypes = true
}

generator kysely {
  provider = "prisma-kysely"

  // Optionally provide a destination directory for the generated file
  // and a filename of your choice
  output       = "../src/db"
  fileName     = "validates.ts"
  // Optionally generate runtime enums to a separate file
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tour {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  duration        Int
  maxGroupSize    Int
  difficulty      Difficulty
  ratingsAverage  Float       @default(4.5) /// @zod.number.min(0).max(5)
  ratingsQuantity Int         @default(0)
  price           Int
  priceDiscount   Int?
  summary         String
  description     String?
  imageCover      String
  images          String[]
  createdAt       DateTime    @default(now())
  startDates      StartDate[]
  isPremium       Boolean     @default(false)
}

model StartDate {
  id        Int      @id @default(autoincrement())
  startDate DateTime
  tourId    Int
  tour      Tour     @relation(fields: [tourId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
}

enum Difficulty {
  EASY
  MEDIUM
  DIFFICULT
}

enum Role {
  USER
  PREMIUM_USER
  ADMIN
}
